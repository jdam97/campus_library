use('db_campus_library');
db.createCollection('users',{
    validator:{
        $jsonSchema:{
            bsonType: "object",
            required:["nombre","apellido","direccion","telefono","email","password","cedula"],
            properties:{
                nombre:{bsonType:"string",description:"nombre debe ser string y es requerido"},
                apellido:{bsonType:"string",description:"apellido debe ser string y es requerido"},
                direccion:{bsonType:"string",description:"direccion debe ser string y es requerido"},
                telefono:{bsonType:"string", description:"telefono debe ser string y es requerido"},
                email:{bsonType:"string", description:"email debe ser string y es requerido"},
                password:{bsonType:"string", description:"password debe ser string y es requerido"},
                cedula:{bsonType:"string", description:"cedula debe ser string y es requerido"},
                rol:{bsonType:"string",enum:["admin","usuario","encargado"]},
                permisos:{
                    bsonType:"array",
                    items:{bsonType:"string"}
                }
            }
        }
    }
})
db.users.createIndex({ email: 1 }, { unique: true });

use('db_campus_library');
db.createCollection('products',{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            required:["nombre","tipo","codigoProducto","estado","descripcion"],
            properties:{
                nombre:{bsonType:"string",description:"nombre debe ser string y es requerido"},
                tipo:{bsonType:"string",enum:["libros","audifonos","equipo"]},
                codigoProducto:{bsonType:"string",description:"codigoProducto debe ser string y es requerido"},
                estado:{bsonType:"string",enum:["disponible","mantenimiento","desabilitado"]},
                descripcion:{bsonType:"string",description:"descripcion debe ser string y es requerido"},
            }
        }
    }
})

use('db_campus_library');
db.createCollection('booking',{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            required:["fecha_recogida","fecha_entrega_solicitada","estado","codigoProducto","cedulaUser","comentarios"],
            properties:{
                fecha_recogida:{bsonType:"date",description:"fecha_recogida es de tipo date y es requerido"},
                fecha_entrega_solicitada:{bsonType:"date",description:"fecha_entrega_solicitada es de tipo date y es requerido"},
                estado:{bsonType:"string",enum:["confirmado","cancelada","pendiente"]},
                codigoProducto:{bsonType:"string",description:"codigoProducto debe ser string y es requerido"},
                cedulaUser:{bsonType:"string",description:"cedulaUser debe ser string y es requerido"},
                comentarios:{bsonType:"string",description:"comentarios debe ser string y es requerido"}
            }
        }
    }
})

use('db_campus_library');
db.createCollection('loans',{
    validator:{
        $jsonSchema:{
            bsonType:"object",
            required:["fecha_inicio","fecha_entrega","estado","cedulaUser","codigoProducto"],
            properties:{
                fecha_inicio:{bsonType:"date",description:"fecha_inicio debe ser tipo date y es requerido"},
                fecha_entrega:{bsonType:"date", description:"fecha_entrega debe ser de tipo date y es requerido"},
                estado:{bsonType:"string",enum:["activo","finalizado","vencido"]},
                cedulaUser:{bsonType:"string",description:"cedulaUser debe ser de tipo string y es requerido"},
                codigoProducto:{bsonType:"string",description:"codigoProducto debe ser string y es requerido"}
            }
        }
    }
})


use('db_campus_library');
db.loans.aggregate([
    {
        $match: { cedulaUser: "333" }
    },
    {
        $lookup: {
            from: "products",
            localField: "codigoProducto",
            foreignField: "codigoProducto",
            as: "producto"
        }
    },
    {
        $lookup: {
            from: "users",
            localField: "cedulaUser",
            foreignField: "cedula",
            as: "usuario_prestamo"
        },
    },
    {
        $unwind: "$usuario_prestamo"
    },
    
    {
        $project: {
            _id: 0,
            fecha_inicio: 1,
            fecha_entrega: 1,
            estado: 1,
            codigoProducto: 1,
            nombreProducto: "$producto.nombre",
            usuario: {
                nombre: "$usuario_prestamo.nombre",
                apellido: "$usuario_prestamo.apellido",
                direccion: "$usuario_prestamo.direccion",
                telefono: "$usuario_prestamo.telefono",
                email: "$usuario_prestamo.email",
                cedula: "$usuario_prestamo.cedula",
                rol: "$usuario_prestamo.rol"
            }
        }
    }
])